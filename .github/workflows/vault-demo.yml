
name: Testing on-prem vault integration

on: [push]

jobs:
  build:
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/github-script@v6
      id: script
      timeout-minutes: 10
      with:
        debug: true
        script: |
          const token = process.env['ACTIONS_RUNTIME_TOKEN']
          const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL']
          core.setOutput('TOKEN', token.trim())
          core.setOutput('IDTOKENURL', runtimeUrl.trim())

    - run: |
        IDTOKEN=$(curl -H "Authorization: bearer  ${{steps.script.outputs.TOKEN}}" ${{steps.script.outputs.IDTOKENURL}}  -H "Accept: application/json; api-version=2.0" -H "Content-Type: application/json" -d "{}" | jq -r '.value')
        echo $IDTOKEN
        jwtd() {
            if [[ -x $(command -v jq) ]]; then
                jq -R 'split(".") | .[0],.[1] | @base64d | fromjson' <<< "${1}"
                echo "Signature: $(echo "${1}" | awk -F'.' '{print $3}')"
            fi
        }
        jwtd $IDTOKEN
        echo "::set-output name=idToken::${IDTOKEN}"
      id: tokenid



    # steps:
    #   - uses: actions/checkout@v2
    #   - name: Retrieve secret from Vault
    #     uses: hashicorp/vault-action@v2.4.0
    #     with:
    #       method: jwt
    #       caCertificate: ${{secrets.VAULT_CA_CERT}}
    #       url: "https://vault.oss.cloudp.libgbl.net"
    #       role: group_cloudp
    #       secrets: |
    #         /secrets/cloudp/init my_secret | MY_SECRET


    # - uses: actions/checkout@v2
    # - name: pre-reqs
    #   run: |
    #      echo "Performing pre-req setup"
    #      echo "...installing vault binary"
    #      sudo apt update 
    #      sudo apt install -y gpg apt-utils wget curl unzip 
    #      wget https://releases.hashicorp.com/vault/1.13.2/vault_1.13.2_linux_amd64.zip 
    #      unzip vault_1.13.2_linux_amd64.zip 
    #      chmod +x vault
    #      sudo mv vault /usr/local/bin

    # - name: vault-demo
    #   env:
    #      VAULT_ADDR: https://vault.oss.cloudp.libgbl.net
    #      VAULT_CACERT: ./certs/vault_ca.crt
    #      VAULT_ROLE: group_cloudp
    #      VAULT_SECRET_PATH: /secrets/cloudp/init
    #      VAULT_SECRET_VALUE: my_secret
    #   run: |
    #      vault version
    #      echo "Getting vault token(vault auth using JWT token)"
    #      export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=${VAULT_ROLE} jwt=${CI_JOB_JWT})"
    #      [ $? -eq 0 ] && echo "Vault token fetch: SUCCESS!"
    #      echo "Fetching secret from vault path: ${VAULT_SECRET_PATH}"
    #      export SECRET="$(vault kv get -field=${VAULT_SECRET_VALUE} ${VAULT_SECRET_PATH})"
    #      echo "Got Secret: ${SECRET}"

