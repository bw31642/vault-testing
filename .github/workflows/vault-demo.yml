
name: Testing on-prem vault integration

on: [push]

jobs:
  build:
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read
    steps:
      # Checkout the repository to the GitHub Actions runner
      - uses: actions/checkout@v2
      - name: Troubleshooting
        run: |
            curl -sSL -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | \
            jq "{ jwt: .value, role: \"$VAULT_ROLE\" }" > ./token.json
            cat token.json
              
            echo 'GitHub Actions Token Claims'
            cat ./token.json | jq -r '.jwt | split(".") | .[1] | @base64d' | jq
            echo 'Vault Login Response'
            echo curl -k -sSLf -X POST -H "Content-Type: application/json" -H "X-Vault-Namespace: admin" --data @token.json $VAULT_URL/v1/auth/$VAULT_AUTH_PATH/login
            curl -k -sSLf -X POST -H "Content-Type: application/json" -H "X-Vault-Namespace: admin" --data @token.json $VAULT_URL/v1/auth/$VAULT_AUTH_PATH/login
            # Remove the token file when we're done (if we don't fail)
            rm ./token.json
        env:
          VAULT_URL: "https://vault.oss.cloudp.libgbl.net"
          VAULT_AUTH_PATH: jwt_github
          VAULT_ROLE: "group_cloudp"

      - name: Retrieve Secrets
        id: secretdata
        uses: hashicorp/vault-action@v2.4.0
        with: 
          method: jwt
          path: jwt_github
          url: ${{ secrets.VAULT_ADDR }}
          role: group_cloudp
          caCertificate: ${{ secrets.VAULT_CA_CERT }}
          secrets: |
            secrets/data/cloudp/init my_secret | MY_SECRET

      - name: Print Secrets
        run: |
            echo '${{ steps.secretdata.outputs.MY_SECRET }}'
            echo '${{ steps.secretdata.outputs.MY_SECRET }}' | sum
            echo '${{ steps.secretdata.outputs.MY_SECRET }}' | md5sum
